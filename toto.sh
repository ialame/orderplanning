# ==========================================
# DIAGNOSTIC: V√©rifier quelles donn√©es l'API retourne vraiment
# ==========================================

echo "üîç DIAGNOSTIC DES DONN√âES EMPLOY√âS"
echo "=================================="

# 1. V√©rifier ce que l'API retourne vraiment
echo "1. Test direct API /api/employees:"
curl -s "http://localhost:8080/api/employees" | jq '.'

echo ""
echo "2. Compter les employ√©s retourn√©s:"
curl -s "http://localhost:8080/api/employees" | jq '. | length'

echo ""
echo "3. Structure du premier employ√©:"
curl -s "http://localhost:8080/api/employees" | jq '.[0]'

echo ""
echo "4. Noms des employ√©s retourn√©s:"
curl -s "http://localhost:8080/api/employees" | jq -r '.[] | "\(.firstName) \(.lastName)"'

# ==========================================
# TESTS POUR IDENTIFIER LE PROBL√àME
# ==========================================

echo ""
echo "üìä TESTS DE DIAGNOSTIC:"
echo "======================"

# Test si l'API retourne une array vide
EMPLOYEE_COUNT=$(curl -s "http://localhost:8080/api/employees" | jq '. | length')
echo "Nombre d'employ√©s dans l'API: $EMPLOYEE_COUNT"

if [ "$EMPLOYEE_COUNT" = "0" ] || [ "$EMPLOYEE_COUNT" = "null" ]; then
    echo "‚ùå PROBL√àME: L'API retourne 0 employ√©s"
    echo "   ‚Üí Le frontend utilise les donn√©es mock par d√©faut"
    echo "   ‚Üí Corrigez le backend pour retourner les vrais employ√©s"
else
    echo "‚úÖ L'API retourne $EMPLOYEE_COUNT employ√©s"
    echo "   ‚Üí Le probl√®me est dans le mapping frontend"
fi

# Test du format des donn√©es
echo ""
echo "5. Format des donn√©es retourn√©es:"
curl -s "http://localhost:8080/api/employees" | jq '.[0] | keys'