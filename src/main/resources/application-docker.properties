# ===============================================
# CONFIGURATION SPRING BOOT POUR DOCKER
# ===============================================
# Fichier: src/main/resources/application-docker.properties

# Application
spring.application.name=pokemon-card-planning-docker

# Serveur
server.port=8080
server.servlet.context-path=/

# Base de données Docker
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mysql://database:3306/dev?useUnicode=true&characterEncoding=utf8mb4&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=ia
spring.datasource.password=foufafou

# Pool de connexions optimisé pour Docker
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000

# JPA/Hibernate pour Docker
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=50

# CORS pour Docker
spring.web.cors.allowed-origins=http://localhost:3000,http://frontend:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=false
spring.web.cors.max-age=3600

# Logging pour Docker
logging.level.root=INFO
logging.level.com.pcagrade=INFO
logging.level.org.springframework.web=WARN

# Métriques et monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true

# Configuration des erreurs
server.error.include-stacktrace=never
server.error.include-message=always

# Planification
planification.auto.enabled=true
planification.historique.jours=30
planification.force.replanification=false

# Configuration spécifique Docker
spring.main.banner-mode=log
spring.output.ansi.enabled=always